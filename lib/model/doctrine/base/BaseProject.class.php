<?php

/**
 * BaseProject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $request
 * @property date $deadline
 * @property string $description
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $Skills
 * @property Doctrine_Collection $Values
 * @property Doctrine_Collection $ProjectSkills
 * @property Doctrine_Collection $ProjectValues
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getRequest()       Returns the current record's "request" value
 * @method date                getDeadline()      Returns the current record's "deadline" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method timestamp           getCreatedAt()     Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()     Returns the current record's "updated_at" value
 * @method Doctrine_Collection getSkills()        Returns the current record's "Skills" collection
 * @method Doctrine_Collection getValues()        Returns the current record's "Values" collection
 * @method Doctrine_Collection getProjectSkills() Returns the current record's "ProjectSkills" collection
 * @method Doctrine_Collection getProjectValues() Returns the current record's "ProjectValues" collection
 * @method Project             setId()            Sets the current record's "id" value
 * @method Project             setName()          Sets the current record's "name" value
 * @method Project             setRequest()       Sets the current record's "request" value
 * @method Project             setDeadline()      Sets the current record's "deadline" value
 * @method Project             setDescription()   Sets the current record's "description" value
 * @method Project             setCreatedAt()     Sets the current record's "created_at" value
 * @method Project             setUpdatedAt()     Sets the current record's "updated_at" value
 * @method Project             setSkills()        Sets the current record's "Skills" collection
 * @method Project             setValues()        Sets the current record's "Values" collection
 * @method Project             setProjectSkills() Sets the current record's "ProjectSkills" collection
 * @method Project             setProjectValues() Sets the current record's "ProjectValues" collection
 * 
 * @package    dfmarketplace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseProject extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('request', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('deadline', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => '25',
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Skill as Skills', array(
             'refClass' => 'ProjectSkill',
             'local' => 'project_id',
             'foreign' => 'skill_id'));

        $this->hasMany('Value as Values', array(
             'refClass' => 'ProjectValue',
             'local' => 'project_id',
             'foreign' => 'value_id'));

        $this->hasMany('ProjectSkill as ProjectSkills', array(
             'local' => 'id',
             'foreign' => 'project_id'));

        $this->hasMany('ProjectValue as ProjectValues', array(
             'local' => 'id',
             'foreign' => 'project_id'));
    }
}