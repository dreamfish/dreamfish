<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ValueEvent', 'doctrine');

/**
 * BaseValueEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $event_id
 * @property integer $value_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Event $Event
 * @property Value $Value
 * 
 * @method integer    getEventId()    Returns the current record's "event_id" value
 * @method integer    getValueId()    Returns the current record's "value_id" value
 * @method timestamp  getCreatedAt()  Returns the current record's "created_at" value
 * @method timestamp  getUpdatedAt()  Returns the current record's "updated_at" value
 * @method Event      getEvent()      Returns the current record's "Event" value
 * @method Value      getValue()      Returns the current record's "Value" value
 * @method ValueEvent setEventId()    Sets the current record's "event_id" value
 * @method ValueEvent setValueId()    Sets the current record's "value_id" value
 * @method ValueEvent setCreatedAt()  Sets the current record's "created_at" value
 * @method ValueEvent setUpdatedAt()  Sets the current record's "updated_at" value
 * @method ValueEvent setEvent()      Sets the current record's "Event" value
 * @method ValueEvent setValue()      Sets the current record's "Value" value
 * 
 * @package    dfmarketplace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseValueEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('value_event');
        $this->hasColumn('event_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('value_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $this->hasOne('Value', array(
             'local' => 'value_id',
             'foreign' => 'id'));
    }
}