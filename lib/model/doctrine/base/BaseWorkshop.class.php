<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Workshop', 'doctrine');

/**
 * BaseWorkshop
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $offer_type_id
 * @property string $avatar_id
 * @property string $description
 * @property integer $welcome_status_id
 * @property string $embedded_video
 * @property integer $contact_id
 * @property integer $payment_method_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $Wallpost
 * @property Doctrine_Collection $WorkshopPerson
 * @property Doctrine_Collection $WorkshopProject
 * @property Doctrine_Collection $WorkstoryWorkshop
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getOfferTypeId()       Returns the current record's "offer_type_id" value
 * @method string              getAvatarId()          Returns the current record's "avatar_id" value
 * @method string              getDescription()       Returns the current record's "description" value
 * @method integer             getWelcomeStatusId()   Returns the current record's "welcome_status_id" value
 * @method string              getEmbeddedVideo()     Returns the current record's "embedded_video" value
 * @method integer             getContactId()         Returns the current record's "contact_id" value
 * @method integer             getPaymentMethodId()   Returns the current record's "payment_method_id" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()         Returns the current record's "updated_at" value
 * @method Doctrine_Collection getEvent()             Returns the current record's "Event" collection
 * @method Doctrine_Collection getWallpost()          Returns the current record's "Wallpost" collection
 * @method Doctrine_Collection getWorkshopPerson()    Returns the current record's "WorkshopPerson" collection
 * @method Doctrine_Collection getWorkshopProject()   Returns the current record's "WorkshopProject" collection
 * @method Doctrine_Collection getWorkstoryWorkshop() Returns the current record's "WorkstoryWorkshop" collection
 * @method Workshop            setId()                Sets the current record's "id" value
 * @method Workshop            setOfferTypeId()       Sets the current record's "offer_type_id" value
 * @method Workshop            setAvatarId()          Sets the current record's "avatar_id" value
 * @method Workshop            setDescription()       Sets the current record's "description" value
 * @method Workshop            setWelcomeStatusId()   Sets the current record's "welcome_status_id" value
 * @method Workshop            setEmbeddedVideo()     Sets the current record's "embedded_video" value
 * @method Workshop            setContactId()         Sets the current record's "contact_id" value
 * @method Workshop            setPaymentMethodId()   Sets the current record's "payment_method_id" value
 * @method Workshop            setCreatedAt()         Sets the current record's "created_at" value
 * @method Workshop            setUpdatedAt()         Sets the current record's "updated_at" value
 * @method Workshop            setEvent()             Sets the current record's "Event" collection
 * @method Workshop            setWallpost()          Sets the current record's "Wallpost" collection
 * @method Workshop            setWorkshopPerson()    Sets the current record's "WorkshopPerson" collection
 * @method Workshop            setWorkshopProject()   Sets the current record's "WorkshopProject" collection
 * @method Workshop            setWorkstoryWorkshop() Sets the current record's "WorkstoryWorkshop" collection
 * 
 * @package    dfmarketplace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseWorkshop extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('workshop');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('offer_type_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('avatar_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('welcome_status_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('embedded_video', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('contact_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('payment_method_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'workshop_id'));

        $this->hasMany('Wallpost', array(
             'local' => 'id',
             'foreign' => 'workshop_id'));

        $this->hasMany('WorkshopPerson', array(
             'local' => 'id',
             'foreign' => 'workshop_id'));

        $this->hasMany('WorkshopProject', array(
             'local' => 'id',
             'foreign' => 'workshop_id'));

        $this->hasMany('WorkstoryWorkshop', array(
             'local' => 'id',
             'foreign' => 'workshop_id'));
    }
}