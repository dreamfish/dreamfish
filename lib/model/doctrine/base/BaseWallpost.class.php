<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Wallpost', 'doctrine');

/**
 * BaseWallpost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $person_id
 * @property integer $workshop_id
 * @property timestamp $date
 * @property string $content
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Person $Person
 * @property Workshop $Workshop
 * 
 * @method integer   getId()          Returns the current record's "id" value
 * @method integer   getPersonId()    Returns the current record's "person_id" value
 * @method integer   getWorkshopId()  Returns the current record's "workshop_id" value
 * @method timestamp getDate()        Returns the current record's "date" value
 * @method string    getContent()     Returns the current record's "content" value
 * @method timestamp getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp getUpdatedAt()   Returns the current record's "updated_at" value
 * @method Person    getPerson()      Returns the current record's "Person" value
 * @method Workshop  getWorkshop()    Returns the current record's "Workshop" value
 * @method Wallpost  setId()          Sets the current record's "id" value
 * @method Wallpost  setPersonId()    Sets the current record's "person_id" value
 * @method Wallpost  setWorkshopId()  Sets the current record's "workshop_id" value
 * @method Wallpost  setDate()        Sets the current record's "date" value
 * @method Wallpost  setContent()     Sets the current record's "content" value
 * @method Wallpost  setCreatedAt()   Sets the current record's "created_at" value
 * @method Wallpost  setUpdatedAt()   Sets the current record's "updated_at" value
 * @method Wallpost  setPerson()      Sets the current record's "Person" value
 * @method Wallpost  setWorkshop()    Sets the current record's "Workshop" value
 * 
 * @package    dfmarketplace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseWallpost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('wallpost');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('person_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('workshop_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Person', array(
             'local' => 'person_id',
             'foreign' => 'id'));

        $this->hasOne('Workshop', array(
             'local' => 'workshop_id',
             'foreign' => 'id'));
    }
}